.btn {
  --btn-bg-color: var(--text-color-primary);
  --btn-color: var(--bg-color);
  border: 0;
  background-color: transparent;

  display: flex;
  align-items: center;
  justify-content: center;
  width: fit-content; /* se encaixa ao tamanho do conteúdo */

  border-radius: 0.5rem;

  /* sequência: font-weight; font-size; largura (do conteúdo dentro do button); font-family */
  font: var(--fw-md) var(--fs-base)/1.5rem var(--ff-sans);

  cursor: pointer;

  background-color: var(--btn-bg-color);
  color: var(--btn-color);

  &:hover {
    --btn-bg-color: linear-gradient(90deg, var(--brand-color-secondary) 0%, 
    var(--brand-color-primary) 100%);
    --btn-color: var(--surface-color);

    -webkit-background-clip: initial;
    background-clip: initial;
    color: var(--btn-color);
  }
}

.btn-sm {
  padding: 0.5rem 1rem;
  font-size: var(--fs-sm);
}

.btn-md {
  padding: 0.75rem 1.5rem;
  font-size: var(--fs-base);
}

.btn-lg {
  padding: 1rem 2rem;
  font-size: 1.125rem;
}

.btn[aria-label] {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    border-radius: inherit;
    inset: 0.09375rem;
    background-color: var(--bg-color);
  }

  &::after {
    content: attr(arial-label);
    background-color: var(--btn-bg-color);
    -webkit-background-clip: text; /* para esse webkit ser funcional, temos que usar o background-clip. */
    background-clip: text;
    color: transparent; /* temos que deixar transparent para conseguir pegar a cor do background-color, pois o color text é mais forte do que o background-color, ou seja, priorizar o color text sempre. */
    position: relative;
    z-index: 1;
  }
}

@media (width >= 80em) {
  
  .btn-sm {
    padding: 0.75rem 1.5rem;
    font-size: var(--fs-base);
  }
  
  .btn-md {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }
}